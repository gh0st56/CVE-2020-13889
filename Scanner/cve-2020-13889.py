"""
Author: Andre. k Lorenci
Contact: avlorenci@gmail.com

https://github.com/gh0st56/

CVE-2020-13889 scanner
"""
from bs4 import BeautifulSoup
import requests
import sys

banner = """
   _______      ________    ___   ___ ___   ___        __ ____   ___   ___   ___  
  / ____\ \    / /  ____|  |__ \ / _ \__ \ / _ \      /_ |___ \ / _ \ / _ \ / _ \ 
 | |     \ \  / /| |__ ______ ) | | | | ) | | | |______| | __) | (_) | (_) | (_) |
 | |      \ \/ / |  __|______/ /| | | |/ /| | | |______| ||__ < > _ < > _ < \__, |
 | |____   \  /  | |____    / /_| |_| / /_| |_| |      | |___) | (_) | (_) |  / / 
  \_____|   \/   |______|  |____|\___/____|\___/       |_|____/ \___/ \___/  /_/  
                                                                                  
"""
print(banner)
# Define Target argument
try:
	target = sys.argv[1]
except:
	sys.exit("Usage ./cve-2020-13889.py <bludit-admin-panel>")
# Vulnerable function
vulnFunc = 'function showAlert(text) {console.log("[INFO] Function showAlert() called.");$("#alert").html(text);$("#alert").slideDown().delay(3000).slideUp();}$(window).click(function() {$("#alert").hide();});'

# String replacing function to control
def StrReplace(request):
	replace1 = request.replace("\n", "")
	replace2 = replace1.replace("\t", "")
	return len(replace2)

# Main requests
req = requests.get(target)
req = str(req.text)

# Beautiful Soup object creation
try:
	soup = BeautifulSoup(req, 'lxml')
	checkCve = soup.select_one('script[charset]').text
except:
	sys.exit("[-] Target does not seems to be vulnerable")

# Function call
StrReplace(checkCve)

# Check both length to validate CVE
if len(vulnFunc) == StrReplace(checkCve):
	print("[+] Vulnerable to CVE-2020-13889\n")
else:
	sys.exit("[-] Not vulnerable")
